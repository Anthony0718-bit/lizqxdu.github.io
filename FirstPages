JAVA基础语法实战案例——插入、整除及显示操作
项目准备
一、开发工具
JDK、Eclipse

二、整体要求
1.完成需求分析和详细设计中所涉及到的所有功能
2.代码结构要层次分明，代码编辑思路要清晰、整洁
3.要求Java代码书写、命名符合规范，并在代码中添加必要的注释
4.程序运行效果与提供的页面效果图、结构保持一致

三、详细设计
设计一个DataMangage，包括如下方法
•插入数据：public int[] insertData() {}
•显示所有数据：public void showData(int[] a, int length) {｝
•在指定位置处插入数据： public void insertAtArray(int[] a, int n, int k) {｝
•查询能被3整除的数据：public void divThree(int[] a) {｝
•显示提示信息：public void notice();
•主方法

四、评分标准
规范【10分】   
•每个类都封装在自己独立的 ".java"文件中；
•文件、class、成员变量命名规范；                   
•代码结构要层次分明；  
•Java代码规范及添加适量注释。
程序整体运行效果【10分】   
•程序正常运行，且满足效果图要求；
•信息间分隔符“*”号数量不做统一要求。                   
插入数据方法【15分】   
•能够完成需求中向数组插入数据的方法。
•要求插入的数据不能为0
显示所有数据方法【10分】   
•能够完成需求中显示所有数据的方法。
•假设数组长度为10，要能完成在指定位置处插入数据前显示9个数据，在指定位置处插入数据后显示10个数据。提示：以最后一个元素是否为0作为判断标准。
在指定位置处插入数据方法【15分】   
•能够完成需求中在指定位置处插入数据的方法。
•要求不能覆盖原有的数据
查询能被3整除的数据的方法【12分】   
•能够完成需求中查询能被3整除的数据的方法。
•要求如果不存在能被3整除的数据，要给出提示信息
显示提示信息菜单的方法【3分】  
•能够完成显示提示信息菜单的方法。
主方法【25分】

实际程序：
package com.works;

import java.util.Arrays;
import java.util.Scanner;

public class SystemDemo {
	private static Scanner sc2;
	private Scanner sc3;
	
	public int[] insertDate(int[] array) {
		array=new int[9];
		Scanner sc3 = new Scanner(System.in);
		for(int i=0;i<array.length;i++) {
			int m=i+1;
		System.out.println("请输入第"+m+"个数据：");
		array[i]=sc3.nextInt();
		int sum=array[i];
		if(sum==0) {
			System.out.println("添加数组的数据不能为0，请重新输入！");
			i--;
		}
		}
		System.out.println("数组元素为：");
		System.out.println(Arrays.toString(array));
		return array;
	}
	public void showData(int[] array,int a) {
		System.out.println("显示所有数据：");
		for(int i=0;i<array.length;i++) {
			a=array[i];
			System.out.println(a+"  ");
			
		}
		System.out.println();
	}
	public void insertAtArray(int[] a,int n,int k) {
		for(int i=a.length-1;i>k;i--) {
			a[i]=a[i]-1;
		}
		a[k]=n;
	}
	public void divThree(int[] a) {
		System.out.println("请输入对应的数字进行操作：");
		System.out.println("数组中能被3整除的元素为：");
		int flag=0;
		for(int i=0;i<a.length-1;i++) {
			if(a[i]%3==0&&a[i]!=0) {
				System.out.println(a[i]);
				flag=1;
			}
		}
		if(flag==0){
			System.out.println("该数组中没有能被3整除的元素");
		}
	}
	public void notice() {
		System.out.println("***************************");
		System.out.println("    1--插入数据");
		System.out.println("    2--显示所有数据");
		System.out.println("    3--在指定位置处插入数据");
		System.out.println("    4--查询能被3整除的数据");
		System.out.println("    0--退出");
		System.out.println("***************************");
		System.out.println("请输入对应的数字进行操作：");
	}

	public static void main(String[] args) {
		SystemDemo systemdemo=new SystemDemo();
		Scanner sc2 = new Scanner(System.in);
		int a=0;
		int[] array=new int[10];
		boolean flag=true;
		int[] array1;
		int i;
		while(flag) {
			systemdemo.notice();
			i=sc2.nextInt();
			switch (i) {
			//case 0:
				//break;
			case 1:
				array1=systemdemo.insertDate(array);
				systemdemo.insertDate(array);
				systemdemo.notice();
				break;
			    //systemdemo.showData(array1,a);
			    //break;
			case 2:
				array1=systemdemo.insertDate(array);
				systemdemo.showData(array1,a);
			    systemdemo.notice();
			    break;
			case 3:
				array1=systemdemo.insertDate(array);
				System.out.println("请输入要插入的数据");
				int n=sc2.nextInt();
				System.out.println("请输入要插入数据的位置");
				int k=sc2.nextInt();
			    systemdemo.insertAtArray(array,n,k);
			    systemdemo.showData(array1,a);
			    systemdemo.notice();
			    break;
			case 4:
				systemdemo.divThree(array);
				systemdemo.notice();
			    break;
			default:
				System.out.println("输入错误！重新输入！");
			    systemdemo.notice();
			    break;
			}
		}

	}

}
